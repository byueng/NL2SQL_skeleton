{
    "db_id": "california_schools",
    "question": "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
    "ground_truth_sql": "SELECT `Free Meal Count (K-12)` / `Enrollment (K-12)` FROM frpm WHERE `County Name` = 'Alameda' ORDER BY (CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)`) DESC LIMIT 1",
    "answer_sql": "SELECT MAX( \"Free Meal Count (K-12)\" / \"Enrollment (K-12)\" ) AS Highest_Eligible_Free_Rate FROM frpm WHERE \"County Name\" = 'Alameda' AND \"Enrollment (K-12)\" > 0;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Please list the lowest three eligible free rates for students aged 5-17 in continuation schools.",
    "ground_truth_sql": "SELECT `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` FROM frpm WHERE `Educational Option Type` = 'Continuation School' AND `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` IS NOT NULL ORDER BY `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` ASC LIMIT 3",
    "answer_sql": "SELECT      CDSCode,     `School Name`,     `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` AS eligible_free_rate FROM frpm WHERE `School Type` LIKE '%Continuation%' AND `Enrollment (Ages 5-17)` > 0 AND `Free Meal Count (Ages 5-17)` IS NOT NULL ORDER BY eligible_free_rate ASC LIMIT 3;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Please list the zip code of all the charter schools in Fresno County Office of Education.",
    "ground_truth_sql": "SELECT T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`District Name` = 'Fresno County Office of Education' AND T1.`Charter School (Y/N)` = 1",
    "answer_sql": "SELECT s.Zip FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.`Charter School (Y/N)` = 1 AND f.`District Name` = 'Fresno County Office of Education'",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the unabbreviated mailing street address of the school with the highest FRPM count for K-12 students?",
    "ground_truth_sql": "SELECT T2.MailStreet FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 1",
    "answer_sql": "SELECT s.MailStreet FROM frpm JOIN schools s ON frpm.CDSCode = s.CDSCode WHERE frpm.\"FRPM Count (K-12)\" IS NOT NULL ORDER BY frpm.\"FRPM Count (K-12)\" DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.",
    "ground_truth_sql": "SELECT T2.Phone FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter Funding Type` = 'Directly funded' AND T1.`Charter School (Y/N)` = 1 AND T2.OpenDate > '2000-01-01'",
    "answer_sql": "SELECT s.Phone FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.`Charter School (Y/N)` = 1 AND f.`Charter Funding Type` = 'Direct' AND s.OpenDate > '2000-01-01'",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "How many schools with an average score in Math greater than 400 in the SAT test are exclusively virtual?",
    "ground_truth_sql": "SELECT COUNT(DISTINCT T2.School) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' AND T1.AvgScrMath > 400",
    "answer_sql": "SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath > 400 AND schools.Virtual = 'F';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.",
    "ground_truth_sql": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Magnet = 1 AND T1.NumTstTakr > 500",
    "answer_sql": "SELECT satscores.sname AS \"School Name\" FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr > 500 AND schools.Magnet = 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?",
    "ground_truth_sql": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",
    "answer_sql": "SELECT s.Phone FROM satscores sat JOIN schools s ON sat.cds = s.CDSCode WHERE sat.NumGE1500 IS NOT NULL ORDER BY sat.NumGE1500 DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?",
    "ground_truth_sql": "SELECT NumTstTakr FROM satscores WHERE cds = ( SELECT CDSCode FROM frpm ORDER BY `FRPM Count (K-12)` DESC LIMIT 1 )",
    "answer_sql": "SELECT s.NumTstTakr FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE f.\"FRPM Count (K-12)\" = (SELECT MAX(\"FRPM Count (K-12)\") FROM frpm);",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?",
    "ground_truth_sql": "SELECT COUNT(T2.`School Code`) FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.`Charter Funding Type` = 'Directly funded'",
    "answer_sql": "SELECT COUNT(*) FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode WHERE satscores.AvgScrMath > 560 AND frpm.\"Charter Funding Type\" = 'Direct Funded';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?",
    "ground_truth_sql": "SELECT T2.`FRPM Count (Ages 5-17)` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrRead DESC LIMIT 1",
    "answer_sql": "SELECT f.`FRPM Count (Ages 5-17)` FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE s.AvgScrRead IS NOT NULL ORDER BY s.AvgScrRead DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Please list the codes of the schools with a total enrollment of over 500.",
    "ground_truth_sql": "SELECT T2.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` + T2.`Enrollment (Ages 5-17)` > 500",
    "answer_sql": "SELECT CDSCode FROM frpm WHERE (\"Enrollment (K-12)\" + \"Enrollment (Ages 5-17)\") > 500;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17?",
    "ground_truth_sql": "SELECT MAX(CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr > 0.3",
    "answer_sql": "SELECT MAX(CAST(\"Free Meal Count (Ages 5-17)\" AS REAL) / \"Enrollment (Ages 5-17)\") AS highest_eligible_free_rate FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE (CAST(satscores.NumGE1500 AS REAL) / satscores.NumTstTakr) > 0.3 AND satscores.NumTstTakr > 0 AND frpm.\"Enrollment (Ages 5-17)\" > 0;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Please list the phone numbers of the schools with the top 3 SAT excellence rate.",
    "ground_truth_sql": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr DESC LIMIT 3",
    "answer_sql": "SELECT s.Phone FROM satscores sat JOIN schools s ON sat.cds = s.CDSCode WHERE sat.NumTstTakr > 0 AND sat.NumGE1500 IS NOT NULL ORDER BY (sat.NumGE1500 * 1.0) / sat.NumTstTakr DESC LIMIT 3;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "List the top five schools, by descending order, from the highest to the lowest, the most number of Enrollment (Ages 5-17). Please give their NCES school identification number.",
    "ground_truth_sql": "SELECT T1.NCESSchool FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T2.`Enrollment (Ages 5-17)` DESC LIMIT 5",
    "answer_sql": "SELECT s.NCESSchool FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode ORDER BY f.`Enrollment (Ages 5-17)` DESC LIMIT 5;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Which active district has the highest average score in Reading?",
    "ground_truth_sql": "SELECT T1.District FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Active' ORDER BY T2.AvgScrRead DESC LIMIT 1",
    "answer_sql": "SELECT sc.District,         CAST(SUM(s.AvgScrRead * s.NumTstTakr) AS REAL) / SUM(s.NumTstTakr) AS AvgReadingScore FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.StatusType = 'Active'   AND s.NumTstTakr > 0   AND s.AvgScrRead IS NOT NULL GROUP BY sc.District ORDER BY AvgReadingScore DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "How many schools in merged Alameda have number of test takers less than 100?",
    "ground_truth_sql": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Merged' AND T2.NumTstTakr < 100 AND T1.County = 'Lake'",
    "answer_sql": "SELECT COUNT(*)  FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE sch.County = 'Alameda' AND s.NumTstTakr < 100;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Rank schools by their average score in Writing where the score is greater than 499, showing their charter numbers.",
    "ground_truth_sql": "SELECT CharterNum, AvgScrWrite, RANK() OVER (ORDER BY AvgScrWrite DESC) AS WritingScoreRank FROM schools AS T1  INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrWrite > 499 AND CharterNum is not null",
    "answer_sql": "SELECT      s.sname AS school_name,     s.AvgScrWrite AS writing_score,     sc.CharterNum AS charter_number,     RANK() OVER (ORDER BY s.AvgScrWrite DESC) AS rank FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE s.AvgScrWrite > 499 AND sc.CharterNum IS NOT NULL ORDER BY rank ASC;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "How many schools in Fresno (directly funded) have number of test takers not more than 250?",
    "ground_truth_sql": "SELECT COUNT(T1.CDSCode) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`Charter Funding Type` = 'Directly funded' AND T1.`County Name` = 'Fresno' AND T2.NumTstTakr <= 250",
    "answer_sql": "SELECT COUNT(*)  FROM schools  JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Fresno'  AND schools.FundingType = 'Direct Funding' AND satscores.NumTstTakr <= 250",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the phone number of the school that has the highest average score in Math?",
    "ground_truth_sql": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1",
    "answer_sql": "SELECT s.Phone FROM schools s JOIN satscores sat ON s.CDSCode = sat.cds ORDER BY sat.AvgScrMath DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "How many schools in Amador which the Low Grade is 9 and the High Grade is 12?",
    "ground_truth_sql": "SELECT COUNT(T1.`School Name`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Amador' AND T1.`Low Grade` = 9 AND T1.`High Grade` = 12",
    "answer_sql": "SELECT COUNT(*) FROM frpm WHERE \"County Name\" = 'Amador' AND \"Low Grade\" = '9' AND \"High Grade\" = '12';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?",
    "ground_truth_sql": "SELECT COUNT(CDSCode) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)`< 700",
    "answer_sql": "SELECT COUNT(*) FROM frpm WHERE \"County Name\" = 'Los Angeles' AND \"Free Meal Count (K-12)\" > 500 AND \"FRPM Count (K-12)\" < 700;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Which school in Contra Costa has the highest number of test takers?",
    "ground_truth_sql": "SELECT sname FROM satscores WHERE cname = 'Contra Costa' AND sname IS NOT NULL ORDER BY NumTstTakr DESC LIMIT 1",
    "answer_sql": "SELECT satscores.sname FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Contra Costa' ORDER BY satscores.NumTstTakr DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
    "ground_truth_sql": "SELECT T1.School, T1.Street FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)` > 30",
    "answer_sql": "SELECT      `frpm`.`School Name` AS SchoolName,     schools.Street || ', ' || schools.City || ', ' || schools.State || ' ' || schools.Zip AS FullAddress FROM      frpm JOIN      schools ON frpm.CDSCode = schools.CDSCode WHERE      ABS(`frpm`.`Enrollment (K-12)` - `frpm`.`Enrollment (Ages 5-17)`) > 30;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Give the names of the schools with the percent eligible for free meals in K-12 is more than 0.1 and test takers whose test score is greater than or equal to 1500?",
    "ground_truth_sql": "SELECT T2.`School Name` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE CAST(T2.`Free Meal Count (K-12)` AS REAL) / T2.`Enrollment (K-12)` > 0.1 AND T1.NumGE1500 > 0",
    "answer_sql": "SELECT f.\"School Name\" FROM frpm f JOIN satscores s ON f.CDSCode = s.cds WHERE f.\"Enrollment (K-12)\" > 0   AND (f.\"Free Meal Count (K-12)\" / f.\"Enrollment (K-12)\") > 0.1   AND s.NumGE1500 > 0;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?",
    "ground_truth_sql": "SELECT T1.sname, T2.`Charter Funding Type` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T2.`District Name` LIKE 'Riverside%' GROUP BY T1.sname, T2.`Charter Funding Type` HAVING CAST(SUM(T1.AvgScrMath) AS REAL) / COUNT(T1.cds) > 400",
    "answer_sql": "SELECT s.sname AS school_name, sc.FundingType FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.County = 'Riverside County' AND s.AvgScrMath > 400;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17?",
    "ground_truth_sql": "SELECT T1.`School Name`, T2.Street, T2.City, T2.State, T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Monterey' AND T1.`Free Meal Count (Ages 5-17)` > 800 AND T1.`School Type` = 'High Schools (Public)'",
    "answer_sql": "SELECT      frpm.`School Name`,     schools.Street,     schools.City,     schools.State,     schools.Zip FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE      frpm.`County Name` = 'Monterey'      AND frpm.`High Grade` >= '12'  -- Identifying high schools (typically grade 12)     AND frpm.`FRPM Count (Ages 5-17)` > 800     AND frpm.`School Type` LIKE '%High%';",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.",
    "ground_truth_sql": "SELECT T2.School, T1.AvgScrWrite, T2.Phone FROM schools AS T2 LEFT JOIN satscores AS T1 ON T2.CDSCode = T1.cds WHERE strftime('%Y', T2.OpenDate) > '1991' OR strftime('%Y', T2.ClosedDate) < '2000'",
    "answer_sql": "SELECT s.sname AS \"School Name\",         s.AvgScrWrite AS \"Average Writing Score\",         sc.Phone AS \"Communication Number\" FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE (sc.OpenDate > '1991-12-31' OR sc.ClosedDate < '2000-01-01')",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
    "ground_truth_sql": "SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')",
    "answer_sql": "WITH school_diffs AS (     SELECT f.\"School Name\", s.DOCType, (f.\"Enrollment (K-12)\" - f.\"Enrollment (Ages 5-17)\") AS difference     FROM frpm f     JOIN schools s ON f.CDSCode = s.CDSCode     WHERE s.FundingType = 'Local'     AND f.\"Enrollment (K-12)\" IS NOT NULL     AND f.\"Enrollment (Ages 5-17)\" IS NOT NULL ), avg_diff AS (     SELECT AVG(difference) AS average_difference     FROM school_diffs ) SELECT \"School Name\", DOCType FROM school_diffs WHERE difference > (SELECT average_difference FROM avg_diff);",
    "difficulty": "challenging"
},
{
    "db_id": "california_schools",
    "question": "When did the first-through-twelfth-grade school with the largest enrollment open?",
    "ground_truth_sql": "SELECT T2.OpenDate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1",
    "answer_sql": "SELECT s.OpenDate FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.\"Enrollment (K-12)\" IS NOT NULL ORDER BY f.\"Enrollment (K-12)\" DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Which cities have the top 5 lowest enrollment number for students in grades 1 through 12?",
    "ground_truth_sql": "SELECT T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode GROUP BY T2.City ORDER BY SUM(T1.`Enrollment (K-12)`) ASC LIMIT 5",
    "answer_sql": "SELECT s.City, SUM(f.\"Enrollment (K-12)\") AS TotalEnrollment FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.\"Enrollment (K-12)\" IS NOT NULL GROUP BY s.City ORDER BY TotalEnrollment ASC LIMIT 5;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
    "ground_truth_sql": "SELECT CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 9, 2",
    "answer_sql": "SELECT      `Free Meal Count (K-12)` / `Enrollment (K-12)` AS eligible_free_rate FROM frpm WHERE `Enrollment (K-12)` IS NOT NULL ORDER BY `Enrollment (K-12)` DESC LIMIT 2 OFFSET 9;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66?",
    "ground_truth_sql": "SELECT CAST(T1.`FRPM Count (K-12)` AS REAL) / T1.`Enrollment (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SOC = 66 ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 5",
    "answer_sql": "SELECT      f.`School Name`,     f.`FRPM Count (K-12)` / f.`Enrollment (K-12)` AS eligible_rate FROM      frpm f JOIN      schools s ON f.CDSCode = s.CDSCode WHERE      s.SOC = '66' ORDER BY      f.`FRPM Count (K-12)` DESC LIMIT 5;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.",
    "ground_truth_sql": "SELECT T2.Website, T1.`School Name` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000 AND T2.Website IS NOT NULL",
    "answer_sql": "SELECT frpm.\"School Name\", schools.Website FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.\"Free Meal Count (Ages 5-17)\" BETWEEN 1900 AND 2000;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the free rate for students between the ages of 5 and 17 at the school run by Kacey Gibson?",
    "ground_truth_sql": "SELECT CAST(T2.`Free Meal Count (Ages 5-17)` AS REAL) / T2.`Enrollment (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Kacey' AND T1.AdmLName1 = 'Gibson'",
    "answer_sql": "WITH admin_schools AS (     SELECT CDSCode     FROM schools     WHERE (AdmFName1 = 'Kacey' AND AdmLName1 = 'Gibson')         OR (AdmFName2 = 'Kacey' AND AdmLName2 = 'Gibson')         OR (AdmFName3 = 'Kacey' AND AdmLName3 = 'Gibson') ), latest_frpm AS (     SELECT f.*     FROM frpm f     INNER JOIN (         SELECT CDSCode, MAX(\"Academic Year\") AS max_year         FROM frpm         GROUP BY CDSCode     ) max_f ON f.CDSCode = max_f.CDSCode AND f.\"Academic Year\" = max_f.max_year ) SELECT      CASE          WHEN lf.\"Enrollment (Ages 5-17)\" = 0 THEN NULL         ELSE lf.\"Free Meal Count (Ages 5-17)\" / lf.\"Enrollment (Ages 5-17)\"     END AS free_rate FROM latest_frpm lf JOIN admin_schools a ON lf.CDSCode = a.CDSCode",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the administrator's email address of the chartered school with the fewest students enrolled in grades 1 through 12?",
    "ground_truth_sql": "SELECT T2.AdmEmail1 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter School (Y/N)` = 1 ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 1",
    "answer_sql": "SELECT s.AdmEmail1 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.\"Charter School (Y/N)\" = 1 ORDER BY f.\"Enrollment (K-12)\" ASC LIMIT 1;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.",
    "ground_truth_sql": "SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",
    "answer_sql": "SELECT AdmFName1 || ' ' || AdmLName1 AS FullName  FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY NumGE1500 DESC LIMIT 1) AND AdmFName1 IS NOT NULL AND AdmLName1 IS NOT NULL  UNION ALL  SELECT AdmFName2 || ' ' || AdmLName2  FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY NumGE1500 DESC LIMIT 1) AND AdmFName2 IS NOT NULL AND AdmLName2 IS NOT NULL  UNION ALL  SELECT AdmFName3 || ' ' || AdmLName3  FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY NumGE1500 DESC LIMIT 1) AND AdmFName3 IS NOT NULL AND AdmLName3 IS NOT NULL",
    "difficulty": "challenging"
},
{
    "db_id": "california_schools",
    "question": "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
    "ground_truth_sql": "SELECT T2.Street, T2.City, T2.State, T2.Zip FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1",
    "answer_sql": "SELECT s.Street, s.City, s.State, s.Zip FROM schools s JOIN satscores sat ON s.CDSCode = sat.cds WHERE sat.NumTstTakr > 0 AND CAST(sat.NumGE1500 AS REAL) / sat.NumTstTakr = (     SELECT MIN(CAST(sat2.NumGE1500 AS REAL) / sat2.NumTstTakr)     FROM satscores sat2     WHERE sat2.NumTstTakr > 0 )",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?",
    "ground_truth_sql": "SELECT T2.Website FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr BETWEEN 2000 AND 3000 AND T2.County = 'Los Angeles'",
    "answer_sql": "SELECT s.Website FROM schools s INNER JOIN satscores sat ON s.CDSCode = sat.cds WHERE s.County = 'Los Angeles' AND sat.NumTstTakr BETWEEN 2000 AND 3000;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980?",
    "ground_truth_sql": "SELECT AVG(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE strftime('%Y', T2.OpenDate) = '1980' AND T2.County = 'Fresno'",
    "answer_sql": "SELECT AVG(s.NumTstTakr) AS AverageTestTakers FROM schools sc INNER JOIN satscores s ON sc.CDSCode = s.cds WHERE sc.County = 'Fresno' AND sc.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the telephone number for the school with the lowest average score in reading in Fresno Unified?",
    "ground_truth_sql": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.District = 'Fresno Unified' AND T1.AvgScrRead IS NOT NULL ORDER BY T1.AvgScrRead ASC LIMIT 1",
    "answer_sql": "SELECT s.Phone FROM schools s JOIN satscores sat ON s.CDSCode = sat.cds WHERE sat.dname = 'Fresno Unified' AND sat.AvgScrRead = (     SELECT MIN(AvgScrRead)     FROM satscores     WHERE dname = 'Fresno Unified' );",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "List the names of virtual schools that are among the top 5 in their respective counties based on average reading scores.",
    "ground_truth_sql": "SELECT School FROM (SELECT T2.School,T1.AvgScrRead, RANK() OVER (PARTITION BY T2.County ORDER BY T1.AvgScrRead DESC) AS rnk FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' ) ranked_schools WHERE rnk <= 5",
    "answer_sql": "WITH ranked_schools AS (     SELECT          sch.School AS school_name,         sch.County,         sat.AvgScrRead,         RANK() OVER (PARTITION BY sch.County ORDER BY sat.AvgScrRead DESC) AS rank     FROM          satscores sat     JOIN          schools sch ON sat.cds = sch.CDSCode     WHERE          sch.Virtual = 'F'         AND sat.AvgScrRead IS NOT NULL ) SELECT      school_name FROM      ranked_schools WHERE      rank <= 5 ORDER BY      county, rank;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the type of education offered in the school who scored the highest average in Math?",
    "ground_truth_sql": "SELECT T2.EdOpsName FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1",
    "answer_sql": "SELECT s.EdOpsName FROM satscores sat JOIN schools s ON sat.cds = s.CDSCode WHERE sat.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores);",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the average math score of the school with the lowest average score for all subjects, and in which county is it located?",
    "ground_truth_sql": "SELECT T1.AvgScrMath, T2.County FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath IS NOT NULL ORDER BY T1.AvgScrMath + T1.AvgScrRead + T1.AvgScrWrite ASC LIMIT 1",
    "answer_sql": "SELECT s.AvgScrMath, sch.County FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE s.AvgScrMath IS NOT NULL    AND s.AvgScrRead IS NOT NULL    AND s.AvgScrWrite IS NOT NULL ORDER BY (s.AvgScrMath + s.AvgScrRead + s.AvgScrWrite) ASC LIMIT 1;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the average writing score of the school who has the highest number of test takers whose total SAT sscores are greater or equal to 1500? Indicate the city to where the school is situated.",
    "ground_truth_sql": "SELECT T1.AvgScrWrite, T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",
    "answer_sql": "SELECT satscores.AvgScrWrite, schools.City FROM satscores JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.NumGE1500 DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores.",
    "ground_truth_sql": "SELECT T2.School, T1.AvgScrWrite FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich'",
    "answer_sql": "SELECT satscores.sname AS \"School Name\",         satscores.AvgScrWrite AS \"Average Writing Score\" FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE (schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich')    OR (schools.AdmFName2 = 'Ricci' AND schools.AdmLName2 = 'Ulrich')    OR (schools.AdmFName3 = 'Ricci' AND schools.AdmLName3 = 'Ulrich') ORDER BY satscores.AvgScrWrite DESC;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Which state special schools have the highest number of enrollees from grades 1 through 12?",
    "ground_truth_sql": "SELECT T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.DOC = 31 ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1",
    "answer_sql": "SELECT s.School, f.`Enrollment (K-12)` AS Enrollment FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.DOC = '31' ORDER BY f.`Enrollment (K-12)` DESC;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980?",
    "ground_truth_sql": "SELECT CAST(COUNT(School) AS REAL) / 12 FROM schools WHERE DOC = 52 AND County = 'Alameda' AND strftime('%Y', OpenDate) = '1980'",
    "answer_sql": "SELECT COUNT(*) / 12.0 AS monthly_avg FROM schools WHERE County = 'Alameda' AND DOC = '52' AND strftime('%Y', OpenDate) = '1980';",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?",
    "ground_truth_sql": "SELECT CAST(SUM(CASE WHEN DOC = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN DOC = 52 THEN 1 ELSE 0 END) FROM schools WHERE StatusType = 'Merged' AND County = 'Orange'",
    "answer_sql": "SELECT      CAST(COUNT(CASE WHEN DOC = '54' THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN DOC = '52' THEN 1 END), 0) AS ratio FROM schools WHERE County = 'Orange';",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date.",
    "ground_truth_sql": "SELECT DISTINCT County, School, ClosedDate FROM schools WHERE County = ( SELECT County FROM schools WHERE StatusType = 'Closed' GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1 ) AND StatusType = 'Closed' AND school IS NOT NULL",
    "answer_sql": "WITH county_counts AS (     SELECT County, COUNT(*) AS num_closed     FROM schools     WHERE StatusType = 'Closed'     GROUP BY County ), max_count AS (     SELECT MAX(num_closed) AS max_num     FROM county_counts ) SELECT s.County, s.School, s.ClosedDate FROM schools s JOIN county_counts cc ON s.County = cc.County JOIN max_count mc ON cc.num_closed = mc.max_num WHERE s.StatusType = 'Closed' ORDER BY s.County, s.School;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the postal street address for the school with the 7th highest Math average? Indicate the school's name.",
    "ground_truth_sql": "SELECT T2.MailStreet, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 6, 1",
    "answer_sql": "SELECT s.School, s.Street FROM satscores sat JOIN schools s ON sat.cds = s.CDSCode WHERE sat.AvgScrMath IS NOT NULL ORDER BY sat.AvgScrMath DESC LIMIT 1 OFFSET 6;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.",
    "ground_truth_sql": "SELECT T2.MailStreet, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead IS NOT NULL ORDER BY T1.AvgScrRead ASC LIMIT 1",
    "answer_sql": "SELECT s.MailStreet, s.School FROM schools s JOIN satscores sat ON s.CDSCode = sat.cds WHERE sat.AvgScrRead IS NOT NULL ORDER BY sat.AvgScrRead ASC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport?",
    "ground_truth_sql": "SELECT COUNT(T1.cds) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Lakeport' AND (T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite) >= 1500",
    "answer_sql": "SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE (satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite) >= 1500 AND schools.MailCity = 'Lakeport';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "How many test takers are there at the school/s whose mailing city address is in Fresno?",
    "ground_truth_sql": "SELECT T1.NumTstTakr FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'",
    "answer_sql": "SELECT SUM(s.NumTstTakr) AS TotalTestTakers FROM schools sch JOIN satscores s ON sch.CDSCode = s.cds WHERE sch.MailCity = 'Fresno';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.",
    "ground_truth_sql": "SELECT School, MailZip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian'",
    "answer_sql": "SELECT School, MailZip FROM schools WHERE (AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian')     OR (AdmFName2 = 'Avetik' AND AdmLName2 = 'Atoian')    OR (AdmFName3 = 'Avetik' AND AdmLName3 = 'Atoian');",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?",
    "ground_truth_sql": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END) FROM schools WHERE MailState = 'CA'",
    "answer_sql": "SELECT      CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) /      NULLIF(SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END), 0) AS ratio FROM schools WHERE UPPER(MailState) = 'CA';",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Of all the schools with a mailing state address in California, how many are active in San Joaquin city?",
    "ground_truth_sql": "SELECT COUNT(CDSCode) FROM schools WHERE City = 'San Joaquin' AND MailState = 'CA' AND StatusType = 'Active'",
    "answer_sql": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND MailCity = 'San Joaquin' AND StatusType = 'Active';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the phone number and extension number for the school that had the 333rd highest average writing score?",
    "ground_truth_sql": "SELECT T2.Phone, T2.Ext FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrWrite DESC LIMIT 332, 1",
    "answer_sql": "SELECT s.Phone, s.Ext FROM schools s JOIN (     SELECT cds     FROM satscores     WHERE AvgScrWrite IS NOT NULL     ORDER BY AvgScrWrite DESC, cds ASC     LIMIT 1 OFFSET 332 ) AS ranked ON s.CDSCode = ranked.cds;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
    "ground_truth_sql": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'",
    "answer_sql": "SELECT School, Phone, Ext FROM schools WHERE Zip = '95203-3704';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?",
    "ground_truth_sql": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez')",
    "answer_sql": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR       (AdmFName2 = 'Mike' AND AdmLName2 = 'Larson') OR       (AdmFName3 = 'Mike' AND AdmLName3 = 'Larson') OR       (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez') OR       (AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez') OR       (AdmFName3 = 'Dante' AND AdmLName3 = 'Alvarez');",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
    "ground_truth_sql": "SELECT Website FROM schools WHERE County = 'San Joaquin' AND Virtual = 'P' AND Charter = 1",
    "answer_sql": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND County = 'San Joaquin';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
    "ground_truth_sql": "SELECT COUNT(School) FROM schools WHERE DOC = 52 AND Charter = 1 AND City = 'Hickman'",
    "answer_sql": "SELECT COUNT(*) FROM schools WHERE City = 'Hickman' AND Charter = 1 AND DOC = '52';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
    "ground_truth_sql": "SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18",
    "answer_sql": "SELECT COUNT(*) FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.Charter = 0 AND schools.County = 'Los Angeles' AND frpm.`Percent (%) Eligible Free (K-12)` < 0.18",
    "difficulty": "challenging"
},
{
    "db_id": "california_schools",
    "question": "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs",
    "ground_truth_sql": "SELECT AdmFName1, AdmLName1, School, City FROM schools WHERE Charter = 1 AND CharterNum = '00D2'",
    "answer_sql": "SELECT School, City, AdmFName1 || ' ' || AdmLName1 AS AdministratorName FROM schools WHERE Charter = 1 AND CharterNum = '00D2' AND AdmFName1 IS NOT NULL AND AdmLName1 IS NOT NULL UNION ALL SELECT School, City, AdmFName2 || ' ' || AdmLName2 AS AdministratorName FROM schools WHERE Charter = 1 AND CharterNum = '00D2' AND AdmFName2 IS NOT NULL AND AdmLName2 IS NOT NULL UNION ALL SELECT School, City, AdmFName3 || ' ' || AdmLName3 AS AdministratorName FROM schools WHERE Charter = 1 AND CharterNum = '00D2' AND AdmFName3 IS NOT NULL AND AdmLName3 IS NOT NULL",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the total number of schools with a mailing city in Hickman belonging to the charter number 00D4?",
    "ground_truth_sql": "SELECT COUNT(*) FROM schools WHERE CharterNum = '00D4' AND MailCity = 'Hickman'",
    "answer_sql": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding?",
    "ground_truth_sql": "SELECT CAST(SUM(CASE WHEN FundingType = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN FundingType != 'Locally funded' THEN 1 ELSE 0 END) FROM schools WHERE County = 'Santa Clara' AND Charter = 1",
    "answer_sql": "SELECT (COUNT(CASE WHEN FundingType = 'Local' THEN 1 END) * 100.0 / COUNT(*)) AS ratio_percentage FROM schools WHERE County = 'Santa Clara' AND Charter = 1 AND FundingType IS NOT NULL;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus?",
    "ground_truth_sql": "SELECT COUNT(School) FROM schools WHERE strftime('%Y', OpenDate) BETWEEN '2000' AND '2005' AND County = 'Stanislaus' AND FundingType = 'Directly funded'",
    "answer_sql": "SELECT COUNT(*) FROM schools WHERE County = 'Stanislaus'   AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31'   AND FundingType = 'Directly Funded';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the total amount of Community College District closure in 1989 in the city of San Francisco?",
    "ground_truth_sql": "SELECT COUNT(School) FROM schools WHERE strftime('%Y', ClosedDate) = '1989' AND City = 'San Francisco' AND DOCType = 'Community College District'",
    "answer_sql": "SELECT COUNT(*) FROM schools WHERE City = 'San Francisco'   AND strftime('%Y', ClosedDate) = '1989'   AND StatusType = 'District'   AND District LIKE '%Community College%';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
    "ground_truth_sql": "SELECT County FROM schools WHERE strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989' AND StatusType = 'Closed' AND SOC = 11 GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1",
    "answer_sql": "SELECT County, COUNT(*) AS closure_count FROM schools WHERE SOC = '11' AND ClosedDate IS NOT NULL AND ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY County ORDER BY closure_count DESC LIMIT 1;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
    "ground_truth_sql": "SELECT NCESDist FROM schools WHERE SOC = 31",
    "answer_sql": "SELECT NCESDist FROM schools WHERE SOC = '31';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "How many active and closed District Community Day Schools are there in the county of Alpine?",
    "ground_truth_sql": "SELECT COUNT(School) FROM schools WHERE (StatusType = 'Closed' OR StatusType = 'Active') AND SOC = 69 AND County = 'Alpine'",
    "answer_sql": "SELECT      SUM(CASE WHEN StatusType = 'Active' THEN 1 ELSE 0 END) AS Active_Count,     SUM(CASE WHEN StatusType = 'Closed' THEN 1 ELSE 0 END) AS Closed_Count FROM schools WHERE County = 'Alpine' AND EdOpsName = 'Community Day School' AND Charter = 0;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the district code for the School that does not offer a magnet program in the city of Fresno?",
    "ground_truth_sql": "SELECT T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.City = 'Fresno' AND T2.Magnet = 0",
    "answer_sql": "SELECT f.`District Code` FROM frpm f INNER JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.Magnet = 0 AND s.City = 'Fresno';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "How many students from the ages of 5 to 17 are enrolled at the State Special School school in Fremont for the 2014-2015 academic year?",
    "ground_truth_sql": "SELECT T1.`Enrollment (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.EdOpsCode = 'SSS' AND T2.City = 'Fremont' AND T1.`Academic Year` BETWEEN 2014 AND 2015",
    "answer_sql": "SELECT frpm.`Enrollment (Ages 5-17)` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.City = 'Fremont' AND schools.EdOpsCode = 'SSS' AND frpm.`Academic Year` = '2014-2015'",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the free or reduced price meal count for ages 5 to 17 in the Youth Authority School with a mailing street address of PO Box 1040?",
    "ground_truth_sql": "SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.MailStreet = 'PO Box 1040' AND T2.SOCType = 'Youth Authority Facilities'",
    "answer_sql": "SELECT \"FRPM Count (Ages 5-17)\" FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.School = 'Youth Authority School' AND schools.MailStreet = 'PO Box 1040';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 0613360?",
    "ground_truth_sql": "SELECT MIN(T1.`Low Grade`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.NCESDist = '0613360' AND T2.EdOpsCode = 'SPECON'",
    "answer_sql": "SELECT frpm.`Low Grade` FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.NCESDist = '0613360'    AND schools.EddOpsCode = 'SPECON' LIMIT 1;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the educational level name for the schools with Breakfast Provision 2 in county code 37? Indicate the name of the school.",
    "ground_truth_sql": "SELECT T2.EILName, T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Breakfast Provision 2' AND T1.`County Code` = 37",
    "answer_sql": "SELECT \"School Name\", \"School Type\" AS \"Educational Level Name\" FROM frpm WHERE \"County Code\" = '37' AND \"NSLP Provision Status\" = 'Breakfast Provision 2';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced?",
    "ground_truth_sql": "SELECT T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Lunch Provision 2' AND T2.County = 'Merced' AND T1.`Low Grade` = 9 AND T1.`High Grade` = 12 AND T2.EILCode = 'HS'",
    "answer_sql": "SELECT s.City FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.EILCode = 'HS' AND f.\"NSLP Provision Status\" = '2' AND f.\"Low Grade\" = '9' AND f.\"High Grade\" = '12' AND f.\"County Name\" = 'Merced';",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?",
    "ground_truth_sql": "SELECT T2.School, T1.`FRPM Count (Ages 5-17)` * 100 / T1.`Enrollment (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.GSserved = 'K-9'",
    "answer_sql": "SELECT \"School Name\", \"Percent (%) Eligible FRPM (Ages 5-17)\"  FROM frpm  WHERE \"County Name\" = 'Los Angeles'  AND \"Low Grade\" = 'K'  AND (\"High Grade\" = '9' OR \"High Grade\" = '09');",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the most common type of grade span served in the city of Adelanto?",
    "ground_truth_sql": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(GSserved) DESC LIMIT 1",
    "answer_sql": "SELECT      frpm.\"Low Grade\" || '-' || frpm.\"High Grade\" as GradeSpan FROM      frpm JOIN      schools ON frpm.CDSCode = schools.CDSCode WHERE      schools.City = 'Adelanto'     AND frpm.\"Low Grade\" IS NOT NULL      AND frpm.\"High Grade\" IS NOT NULL GROUP BY      GradeSpan ORDER BY      COUNT(*) DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.",
    "ground_truth_sql": "SELECT County, COUNT(Virtual) FROM schools WHERE (County = 'San Diego' OR County = 'Santa Barbara') AND Virtual = 'F' GROUP BY County ORDER BY COUNT(Virtual) DESC LIMIT 1",
    "answer_sql": "WITH CountyCounts AS (     SELECT County, COUNT(*) AS SchoolCount     FROM schools     WHERE Virtual = 'F' AND County IN ('San Diego', 'Santa Barbara')     GROUP BY County ) SELECT County, SchoolCount FROM CountyCounts WHERE SchoolCount = (SELECT MAX(SchoolCount) FROM CountyCounts);",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.",
    "ground_truth_sql": "SELECT T1.`School Type`, T1.`School Name`, T2.Latitude FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T2.Latitude DESC LIMIT 1",
    "answer_sql": "SELECT s.School AS `School Name`, s.Latitude, f.`School Type` FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.Latitude IS NOT NULL AND f.`Academic Year` = (     SELECT MAX(`Academic Year`)     FROM frpm     WHERE CDSCode = s.CDSCode ) ORDER BY s.Latitude DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "In which city can you find the school in the state of California with the lowest latitude coordinates and what is its lowest grade? Indicate the school name.",
    "ground_truth_sql": "SELECT T2.City, T1.`Low Grade`, T1.`School Name` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.State = 'CA' ORDER BY T2.Latitude ASC LIMIT 1",
    "answer_sql": "SELECT schools.School AS \"School Name\", schools.City, frpm.\"Low Grade\" FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.State = 'CA' AND schools.Latitude IS NOT NULL ORDER BY schools.Latitude ASC LIMIT 1;",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the grade span offered in the school with the highest longitude?",
    "ground_truth_sql": "SELECT GSoffered FROM schools ORDER BY ABS(longitude) DESC LIMIT 1",
    "answer_sql": "SELECT f.\"Low Grade\" || '-' || f.\"High Grade\" AS GradeSpan FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.Longitude IS NOT NULL ORDER BY ABS(s.Longitude) DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
    "ground_truth_sql": "SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City",
    "answer_sql": "SELECT COUNT(*) AS count_magnet_k8_multiple_provision FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.Magnet = 1 AND frpm.`Low Grade` = 'K' AND frpm.`High Grade` = '8' AND frpm.`NSLP Provision Status` = 'Multiple Provision Types';  SELECT schools.City, COUNT(*) AS number_of_schools FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.`Low Grade` = 'K' AND frpm.`High Grade` = '8' GROUP BY schools.City ORDER BY schools.City;",
    "difficulty": "challenging"
},
{
    "db_id": "california_schools",
    "question": "What are the two most common first names among the school administrators? Indicate the district to which they administer.",
    "ground_truth_sql": "SELECT DISTINCT T1.AdmFName1, T1.District FROM schools AS T1 INNER JOIN ( SELECT admfname1 FROM schools GROUP BY admfname1 ORDER BY COUNT(admfname1) DESC LIMIT 2 ) AS T2 ON T1.AdmFName1 = T2.admfname1",
    "answer_sql": "WITH AllAdmins AS (     SELECT AdmFName1 AS FirstName, District FROM schools WHERE AdmFName1 IS NOT NULL     UNION ALL     SELECT AdmFName2, District FROM schools WHERE AdmFName2 IS NOT NULL     UNION ALL     SELECT AdmFName3, District FROM schools WHERE AdmFName3 IS NOT NULL ), NameCounts AS (     SELECT FirstName, COUNT(*) AS Freq     FROM AllAdmins     GROUP BY FirstName     ORDER BY Freq DESC     LIMIT 2 ) SELECT nc.FirstName, GROUP_CONCAT(DISTINCT a.District) AS Districts FROM NameCounts nc JOIN AllAdmins a ON nc.FirstName = a.FirstName GROUP BY nc.FirstName ORDER BY nc.Freq DESC;",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.",
    "ground_truth_sql": "SELECT T1.`Free Meal Count (K-12)` * 100 / T1.`Enrollment (K-12)`, T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine'",
    "answer_sql": "SELECT f.`District Code`, f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)` * 100 AS `Percent (%) Eligible Free (K-12)` FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.AdmFName1 LIKE '%Alusine%' OR s.AdmFName2 LIKE '%Alusine%' OR s.AdmFName3 LIKE '%Alusine%';",
    "difficulty": "moderate"
},
{
    "db_id": "california_schools",
    "question": "What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.",
    "ground_truth_sql": "SELECT AdmLName1, District, County, School FROM schools WHERE CharterNum = '0040'",
    "answer_sql": "SELECT      s.District,      s.County,      s.School,      COALESCE(s.AdmLName1, s.AdmLName2, s.AdmLName3) AS AdministratorLastName FROM      schools s WHERE      s.CharterNum = '40';",
    "difficulty": "simple"
},
{
    "db_id": "california_schools",
    "question": "What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",
    "ground_truth_sql": "SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009' AND '2010' AND T2.SOC = 62",
    "answer_sql": "WITH eligible_schools AS (     SELECT AdmEmail1, AdmEmail2, AdmEmail3     FROM schools     WHERE County = 'San Bernardino'     AND District = 'San Bernardino City Unified'     AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'     AND (SOC = '62' OR DOC = '54')     AND StatusType = 'Public' ) SELECT email FROM (     SELECT AdmEmail1 AS email FROM eligible_schools WHERE AdmEmail1 IS NOT NULL     UNION     SELECT AdmEmail2 FROM eligible_schools WHERE AdmEmail2 IS NOT NULL     UNION     SELECT AdmEmail3 FROM eligible_schools WHERE AdmEmail3 IS NOT NULL ) WHERE email IS NOT NULL;",
    "difficulty": "challenging"
},
{
    "db_id": "california_schools",
    "question": "What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.",
    "ground_truth_sql": "SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",
    "answer_sql": "SELECT s.School, s.AdmEmail1 FROM schools s JOIN satscores sat ON s.CDSCode = sat.cds WHERE sat.NumGE1500 IS NOT NULL ORDER BY sat.NumGE1500 DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many accounts who choose issuance after transaction are staying in East Bohemia region?",
    "ground_truth_sql": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'east Bohemia' AND T2.frequency = 'POPLATEK PO OBRATU'",
    "answer_sql": "SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE account.frequency = 'POPLATEK PO OBRATU' AND district.A3 = 'East Bohemia';",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "How many accounts who have region in Prague are eligible for loans?",
    "ground_truth_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.A3 = 'Prague'",
    "answer_sql": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id JOIN loan l ON a.account_id = l.account_id WHERE d.A3 = 'Prague'",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "The average unemployment ratio of 1995 and 1996, which one has higher percentage?",
    "ground_truth_sql": "SELECT DISTINCT IIF(AVG(A13) > AVG(A12), '1996', '1995') FROM district",
    "answer_sql": "SELECT     CASE         WHEN AVG(A12) > AVG(A13) THEN '1995 has higher average unemployment rate'         WHEN AVG(A12) < AVG(A13) THEN '1996 has higher average unemployment rate'         ELSE '1995 and 1996 have equal average unemployment rate'     END AS comparison_result FROM district;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "List out the no. of districts that have female average salary is more than 6000 but less than 10000?",
    "ground_truth_sql": "SELECT COUNT(DISTINCT T2.district_id)  FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A11 BETWEEN 6000 AND 10000",
    "answer_sql": "SELECT COUNT(DISTINCT d.district_id) FROM district d JOIN client c ON d.district_id = c.district_id WHERE d.A11 > 6000 AND d.A11 < 10000 AND c.gender = 'F';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many male customers who are living in North Bohemia have average salary greater than 8000?",
    "ground_truth_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'north Bohemia' AND T2.A11 > 8000",
    "answer_sql": "SELECT COUNT(*)  FROM client  JOIN district ON client.district_id = district.district_id  WHERE client.gender = 'M'    AND district.A3 = 'North Bohemia'    AND district.A11 > 8000;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
    "ground_truth_sql": "SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",
    "answer_sql": "SELECT d.account_id,         (SELECT MAX(A11) FROM district) - (SELECT MIN(A11) FROM district) AS gap FROM disp d JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND c.district_id IN (SELECT district_id FROM district WHERE A11 = (SELECT MIN(A11) FROM district))",
    "difficulty": "challenging"
},
{
    "db_id": "financial",
    "question": "List out the account numbers of clients who are youngest and have highest average salary?",
    "ground_truth_sql": "SELECT T1.account_id  FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 on T4.district_id = T1.district_id WHERE T2.client_id = ( SELECT client_id FROM client ORDER BY birth_date DESC LIMIT 1) GROUP BY T4.A11, T1.account_id",
    "answer_sql": "WITH youngest_clients AS (     SELECT client_id, district_id     FROM client     WHERE birth_date = (SELECT MAX(birth_date) FROM client) ), ranked_youngest AS (     SELECT yc.client_id,            RANK() OVER (ORDER BY d.A11 DESC) as salary_rank     FROM youngest_clients yc     JOIN district d ON yc.district_id = d.district_id ) SELECT a.account_id FROM account a JOIN disp ON a.account_id = disp.account_id JOIN ranked_youngest r ON disp.client_id = r.client_id WHERE disp.type = 'OWNER'   AND r.salary_rank = 1;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "How many customers who choose statement of weekly issuance are Owner?",
    "ground_truth_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' AND T1.frequency = 'POPLATEK TYDNE'",
    "answer_sql": "SELECT COUNT(DISTINCT d.client_id) FROM account a JOIN disp d ON a.account_id = d.account_id WHERE a.frequency = 'POPLATEK TYDNE'   AND d.type = 'Owner';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "List out the id number of client who choose statement of issuance after transaction are Disponent?",
    "ground_truth_sql": "SELECT T2.client_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.type = 'DISPONENT'",
    "answer_sql": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN trans t ON d.account_id = t.account_id WHERE d.type = 'Disponent' AND t.k_symbol = 'POPLATEK PO OBRATU';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Among the accounts who have approved loan date in 1997, list out the accounts that have the lowest approved amount and choose weekly issuance statement.",
    "ground_truth_sql": "SELECT T2.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T1.date) = '1997' AND T2.frequency = 'POPLATEK TYDNE' ORDER BY T1.amount LIMIT 1",
    "answer_sql": "SELECT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'A'  -- Assuming 'A' means approved loan status AND strftime('%Y', l.date) = '1997' AND l.amount = (     SELECT MIN(amount)     FROM loan     WHERE status = 'A'     AND strftime('%Y', date) = '1997' ) AND a.frequency = 'POPLATEK TYDNE'  -- Weekly issuance as per evidence",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.",
    "ground_truth_sql": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T2.date) = '1993' AND T1.duration > 12 ORDER BY T1.amount DESC LIMIT 1",
    "answer_sql": "SELECT DISTINCT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND strftime('%Y', a.date) = '1993' AND l.amount = (     SELECT MAX(l2.amount)     FROM loan l2     JOIN account a2 ON l2.account_id = a2.account_id     WHERE l2.duration > 12     AND strftime('%Y', a2.date) = '1993' );",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "Among the account opened, how many female customers who were born before 1950 and stayed in Sokolov?",
    "ground_truth_sql": "SELECT COUNT(T2.client_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' AND STRFTIME('%Y', T2.birth_date) < '1950' AND T1.A2 = 'Sokolov'",
    "answer_sql": "SELECT COUNT(DISTINCT client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id INNER JOIN disp ON client.client_id = disp.client_id WHERE client.gender = 'F' AND client.birth_date < '1950-01-01' AND district.A2 = 'Sokolov'",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "List out the accounts who have the earliest trading date in 1995 ?",
    "ground_truth_sql": "SELECT account_id FROM trans WHERE STRFTIME('%Y', date) = '1995' ORDER BY date ASC LIMIT 1",
    "answer_sql": "SELECT DISTINCT account_id FROM trans WHERE date = (     SELECT MIN(date)     FROM trans     WHERE date LIKE '1995-%' );",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "State different accounts who have account opening date before 1997 and own an amount of money greater than 3000USD",
    "ground_truth_sql": "SELECT DISTINCT T2.account_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T2.date) < '1997' AND T1.amount > 3000",
    "answer_sql": "WITH latest_trans AS (     SELECT account_id, MAX(trans_id) as max_trans_id     FROM trans     GROUP BY account_id ) SELECT a.account_id FROM account a JOIN latest_trans lt ON a.account_id = lt.account_id JOIN trans t ON lt.max_trans_id = t.trans_id WHERE a.date < '1997-01-01' AND t.balance > 3000;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Which client issued his/her card in 1994/3/3, give his/her client id.",
    "ground_truth_sql": "SELECT T2.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued = '1994-03-03'",
    "answer_sql": "SELECT d.client_id FROM card c JOIN disp d ON c.disp_id = d.disp_id WHERE c.issued = '1994-03-03'",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "The transaction of 840 USD happened in 1998/10/14, when was this account opened?",
    "ground_truth_sql": "SELECT T1.date FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 840 AND T2.date = '1998-10-14'",
    "answer_sql": "SELECT a.date AS account_opening_date FROM account a JOIN trans t ON a.account_id = t.account_id WHERE t.amount = 840 AND t.date = '1998-10-14';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.",
    "ground_truth_sql": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25'",
    "answer_sql": "SELECT a.district_id FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.date = '1994-08-25';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
    "ground_truth_sql": "SELECT T4.amount FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id JOIN account AS T3 on T2.account_id = T3.account_id JOIN trans AS T4 on T3.account_id = T4.account_id WHERE T1.issued = '1996-10-21' ORDER BY T4.amount DESC LIMIT 1",
    "answer_sql": "SELECT MAX(t.amount) AS max_transaction_amount FROM trans t WHERE t.account_id IN (     SELECT d.account_id     FROM disp d     WHERE d.client_id IN (         SELECT DISTINCT d2.client_id         FROM card c         JOIN disp d2 ON c.disp_id = d2.disp_id         WHERE c.issued = '1996-10-21'     ) )",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What is the gender of the oldest client who opened his/her account in the highest average salary branch?",
    "ground_truth_sql": "SELECT T2.gender FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id ORDER BY T1.A11 DESC, T2.birth_date ASC LIMIT 1",
    "answer_sql": "WITH highest_salary_district AS (     SELECT district_id     FROM district     ORDER BY A11 DESC     LIMIT 1 ), accounts_in_highest_salary AS (     SELECT account_id     FROM account     WHERE district_id = (SELECT district_id FROM highest_salary_district) ), oldest_client AS (     SELECT c.client_id, c.gender     FROM client c     JOIN disp d ON c.client_id = d.client_id     WHERE d.account_id IN (SELECT account_id FROM accounts_in_highest_salary)     ORDER BY c.birth_date ASC     LIMIT 1 ) SELECT gender FROM oldest_client;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
    "ground_truth_sql": "SELECT T3.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id ORDER BY T1.amount DESC, T3.date ASC LIMIT 1",
    "answer_sql": "WITH MaxLoanAccount AS (     SELECT l.account_id, a.date AS open_date     FROM loan l     JOIN account a ON l.account_id = a.account_id     ORDER BY l.amount DESC, l.loan_id     LIMIT 1 ) SELECT t.amount FROM trans t JOIN MaxLoanAccount mla ON t.account_id = mla.account_id WHERE t.date > mla.open_date ORDER BY t.date, t.trans_id LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many clients opened their accounts in Jesenik branch were women?",
    "ground_truth_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A2 = 'Jesenik'",
    "answer_sql": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE dist.A2 = 'Jesenik' AND c.gender = 'F';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What is the disposition id of the client who made 5100 USD transaction in 1998/9/2?",
    "ground_truth_sql": "SELECT T1.disp_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.date='1997-08-20' AND T3.amount = 5100",
    "answer_sql": "SELECT d.disp_id FROM trans t JOIN disp d ON t.account_id = d.account_id WHERE t.amount = 5100 AND t.date = '1998-09-02';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many accounts were opened in Litomerice in 1996?",
    "ground_truth_sql": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T2.date) = '1996' AND T1.A2 = 'Litomerice'",
    "answer_sql": "SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Litomerice' AND strftime('%Y', account.date) = '1996';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "For the female client who was born in 1976/1/29, which district did she opened her account?",
    "ground_truth_sql": "SELECT T1.A2 FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.birth_date = '1976-01-29' AND T2.gender = 'F'",
    "answer_sql": "SELECT dis.A2 FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dis ON a.district_id = dis.district_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29' AND d.type = 'OWNER';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?",
    "ground_truth_sql": "SELECT T4.birth_date FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.date = '1996-01-03' AND T1.amount = 98832",
    "answer_sql": "SELECT c.birth_date FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE l.amount = 98832 AND l.date = '1996-01-03'",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "For the first client who opened his/her account in Prague, what is his/her account ID?",
    "ground_truth_sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Prague' ORDER BY T1.date ASC LIMIT 1",
    "answer_sql": "SELECT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district dist ON c.district_id = dist.district_id WHERE dist.A3 = 'Prague' ORDER BY a.date ASC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
    "ground_truth_sql": "SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1",
    "answer_sql": "SELECT      (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male FROM client c WHERE c.district_id = (     SELECT district_id     FROM district     WHERE A3 = 'south Bohemia'     ORDER BY CAST(A4 AS INTEGER) DESC     LIMIT 1 );",
    "difficulty": "challenging"
},
{
    "db_id": "financial",
    "question": "For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
    "ground_truth_sql": "SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22', T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE T1.date = '1993-07-05'",
    "answer_sql": "WITH target_account AS (     SELECT account_id     FROM loan     WHERE date = '1993-07-05'     ORDER BY loan_id ASC     LIMIT 1 ) SELECT      (          CAST(             (SELECT balance FROM trans WHERE account_id = target_account.account_id AND date <= '1998-12-27' ORDER BY date DESC, trans_id DESC LIMIT 1) -             (SELECT balance FROM trans WHERE account_id = target_account.account_id AND date <= '1993-03-22' ORDER BY date DESC, trans_id DESC LIMIT 1)         AS REAL) /         CAST(             (SELECT balance FROM trans WHERE account_id = target_account.account_id AND date <= '1993-03-22' ORDER BY date DESC, trans_id DESC LIMIT 1)         AS REAL)     ) * 100.0 AS increase_rate FROM target_account;",
    "difficulty": "challenging"
},
{
    "db_id": "financial",
    "question": "What is the percentage of loan amount that has been fully paid with no issue.",
    "ground_truth_sql": "SELECT (CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) * 100) / SUM(amount) FROM loan",
    "answer_sql": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / SUM(amount)) AS percentage_paid FROM loan;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "For loan amount less than USD100,000, what is the percentage of accounts that is still running with no issue.",
    "ground_truth_sql": "SELECT CAST(SUM(status = 'C') AS REAL) * 100 / COUNT(account_id) FROM loan WHERE amount < 100000",
    "answer_sql": "SELECT      100.0 * COUNT(DISTINCT CASE WHEN status = 'C' THEN account_id END) / COUNT(DISTINCT account_id) AS percentage FROM loan WHERE amount < 100000;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.",
    "ground_truth_sql": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND STRFTIME('%Y', T1.date)= '1993'",
    "answer_sql": "SELECT a.account_id, d.A2 AS district_name, d.A3 AS district_region FROM account a JOIN district d ON a.district_id = d.district_id WHERE strftime('%Y', a.date) = '1993' AND (EXISTS (SELECT 1 FROM `order` o WHERE o.account_id = a.account_id AND o.k_symbol = 'POPLATEK PO OBRATU')      OR EXISTS (SELECT 1 FROM trans t WHERE t.account_id = a.account_id AND t.k_symbol = 'POPLATEK PO OBRATU'))",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.",
    "ground_truth_sql": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'east Bohemia' AND STRFTIME('%Y', T1.date) BETWEEN '1995' AND '2000'",
    "answer_sql": "SELECT a.account_id, a.frequency FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district di ON c.district_id = di.district_id WHERE di.A3 = 'east Bohemia'   AND d.type = 'OWNER'   AND strftime('%Y', a.date) BETWEEN '1995' AND '2000';",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "List account ID and account opening date for accounts from 'Prachatice'.",
    "ground_truth_sql": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'",
    "answer_sql": "SELECT a.account_id, a.date FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Prachatice';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "State the district and region for loan ID '4990'.",
    "ground_truth_sql": "SELECT T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.loan_id = 4990",
    "answer_sql": "SELECT d.A2 AS district, d.A3 AS region FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.loan_id = 4990;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Provide the account ID, district and region for loan amount greater than USD300,000.",
    "ground_truth_sql": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.amount > 300000",
    "answer_sql": "SELECT l.account_id, d.A2 AS district, d.A3 AS region FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.amount > 300000;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "List the loan ID, district and average salary for loan with duration of 60 months.",
    "ground_truth_sql": "SELECT T3.loan_id, T2.A2, T2.A11 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.duration = 60",
    "answer_sql": "SELECT l.loan_id, d.A3 AS district, d.A11 AS average_salary FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.duration = 60;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
    "ground_truth_sql": "SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D'",
    "answer_sql": "SELECT DISTINCT d.A2 AS district, d.A3 AS state,         CASE           WHEN d.A12 IS NOT NULL AND d.A12 != 0 THEN ((d.A13 - d.A12) / d.A12) * 100           ELSE NULL         END AS unemployment_increment_percentage FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.status = 'D'",
    "difficulty": "challenging"
},
{
    "db_id": "financial",
    "question": "Calculate the percentage of account from 'Decin' district for all accounts are opened in 1993.",
    "ground_truth_sql": "SELECT CAST(SUM(T1.A2 = 'Decin') AS REAL) * 100 / COUNT(account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T2.date) = '1993'",
    "answer_sql": "SELECT      100.0 * SUM(CASE WHEN d.A2 = 'Decin' THEN 1 ELSE 0 END) / NULLIF(COUNT(*), 0) AS percentage FROM      account a JOIN      district d ON a.district_id = d.district_id WHERE      strftime('%Y', a.date) = '1993';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "List the account IDs with monthly issuance of statements.",
    "ground_truth_sql": "SELECT account_id FROM account WHERE Frequency = 'POPLATEK MESICNE'",
    "answer_sql": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "List the top nine districts, by descending order, from the highest to the lowest, the number of female account holders.",
    "ground_truth_sql": "SELECT T2.A2, COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.district_id, T2.A2 ORDER BY COUNT(T1.client_id) DESC LIMIT 9",
    "answer_sql": "SELECT d.A2 AS district_name, COUNT(DISTINCT c.client_id) AS num_female_account_holders FROM client c INNER JOIN disp dp ON c.client_id = dp.client_id INNER JOIN account a ON dp.account_id = a.account_id INNER JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' GROUP BY d.district_id ORDER BY num_female_account_holders DESC LIMIT 9;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "Which are the top ten withdrawals (non-credit card) by district names for the month of January 1996?",
    "ground_truth_sql": "SELECT DISTINCT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ' AND T3.date LIKE '1996-01%' ORDER BY A2 ASC LIMIT 10",
    "answer_sql": "SELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawal FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%' GROUP BY d.A2 ORDER BY total_withdrawal DESC LIMIT 10;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "How many of the account holders in South Bohemia still do not own credit cards?",
    "ground_truth_sql": "SELECT COUNT(T3.account_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.client_id = T3.client_id WHERE T1.A3 = 'south Bohemia' AND T3.type != 'OWNER'",
    "answer_sql": "SELECT COUNT(DISTINCT d.client_id) FROM disp d WHERE d.account_id IN (     SELECT a.account_id     FROM account a     JOIN district di ON a.district_id = di.district_id     WHERE di.A3 = 'South Bohemia' ) AND d.type = 'OWNER' AND NOT EXISTS (     SELECT 1     FROM card c     JOIN disp d2 ON c.disp_id = d2.disp_id     WHERE d2.client_id = d.client_id     AND c.type = 'credit' );",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "Which district has highest active loan?",
    "ground_truth_sql": "SELECT T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.status IN ('C', 'D') GROUP BY T2.A3 ORDER BY SUM(T3.amount) DESC LIMIT 1",
    "answer_sql": "SELECT d.A3 AS district_name FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.status IN ('C', 'D') GROUP BY d.district_id ORDER BY SUM(l.amount) DESC LIMIT 1;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "What is the average loan amount by male borrowers?",
    "ground_truth_sql": "SELECT AVG(T4.amount) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'M'",
    "answer_sql": "SELECT AVG(l.amount) AS average_loan_amount FROM loan l JOIN disp d ON l.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'M';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "In 1996, which districts have the highest unemployment rate? List their branch location and district name.",
    "ground_truth_sql": "SELECT district_id, A2 FROM district ORDER BY A13 DESC LIMIT 1",
    "answer_sql": "SELECT A2 AS district_name, A13 AS unemployment_rate_1996 FROM district ORDER BY A13 DESC LIMIT 5;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "In the branch where the largest number of crimes were committed in 1996, how many accounts were opened?",
    "ground_truth_sql": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id GROUP BY T1.A16 ORDER BY T1.A16 DESC LIMIT 1",
    "answer_sql": "SELECT COUNT(*) AS number_of_accounts FROM account WHERE district_id IN (     SELECT district_id     FROM district     WHERE A16 = (SELECT MAX(A16) FROM district) );",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance?",
    "ground_truth_sql": "SELECT COUNT(T1.account_id) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.balance < 0 AND T1.operation = 'VYBER KARTOU' AND T2.frequency = 'POPLATEK MESICNE'",
    "answer_sql": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN trans t ON a.account_id = t.account_id WHERE a.frequency = 'POPLATEK MESICNE' AND t.operation = 'VYBER KARTOU' AND t.balance < 0;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved?",
    "ground_truth_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.frequency = 'POPLATEK MESICNE' AND T2.amount >= 250000",
    "answer_sql": "SELECT COUNT(*) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.date BETWEEN '1995-01-01' AND '1997-12-31' AND loan.amount >= 250000 AND account.frequency = 'POPLATEK MESICNE' AND loan.status = 'A';",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "How many accounts have running contracts in Branch location 1?",
    "ground_truth_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T1.district_id = 1 AND (T3.status = 'C' OR T3.status = 'D')",
    "answer_sql": "SELECT COUNT(DISTINCT a.account_id) FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.status IN ('C', 'D') AND a.district_id = 1;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "In the branch where the second-highest number of crimes were committed in 1995 occurred, how many male clients are there?",
    "ground_truth_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A15 = (SELECT T3.A15 FROM district AS T3 ORDER BY T3.A15 DESC LIMIT 1, 1)",
    "answer_sql": "SELECT COUNT(*) AS male_clients_count FROM client WHERE gender = 'M' AND district_id IN (     SELECT district_id     FROM district     WHERE A15 = (         SELECT A15         FROM district         WHERE A15 IS NOT NULL         GROUP BY A15         ORDER BY A15 DESC         LIMIT 1 OFFSET 1     )     AND A15 IS NOT NULL );",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "How many high-level credit cards have \"OWNER\" type of disposition?",
    "ground_truth_sql": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'",
    "answer_sql": "SELECT COUNT(*) FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many accounts are there in the district of \"Pisek\"?",
    "ground_truth_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'",
    "answer_sql": "SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Pisek';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Which districts have transactions greater than USS$10,000 in 1997?",
    "ground_truth_sql": "SELECT T1.district_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE STRFTIME('%Y', T3.date) = '1997' GROUP BY T1.district_id HAVING SUM(T3.amount) > 10000",
    "answer_sql": "SELECT DISTINCT d.A2 AS district_name FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE t.amount > 10000 AND strftime('%Y', t.date) = '1997';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Which accounts placed orders for household payment in Pisek?",
    "ground_truth_sql": "SELECT DISTINCT T2.account_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'",
    "answer_sql": "SELECT DISTINCT o.account_id FROM `order` o JOIN account a ON o.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Pisek' AND o.k_symbol = 'SIPO';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What are the accounts that have gold credit cards?",
    "ground_truth_sql": "SELECT T2.account_id FROM disp AS T2  INNER JOIN card AS T1 ON T1.disp_id = T2.disp_id  WHERE T1.type = 'gold'",
    "answer_sql": "SELECT DISTINCT d.account_id FROM card c JOIN disp d ON c.disp_id = d.disp_id WHERE c.type = 'gold';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How much is the average amount in credit card made by account holders in a month, in year 2021?",
    "ground_truth_sql": "SELECT AVG(T4.amount) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE STRFTIME('%Y', T4.date) = '1998' AND T4.operation = 'VYBER KARTOU'",
    "answer_sql": "SELECT AVG(amount) AS average_monthly_credit_card_amount FROM trans WHERE operation = 'VYBER KARTOU'   AND strftime('%Y', date) = '2021'   AND strftime('%m', date) = strftime('%m', date) -- Grouping by month handled in aggregation GROUP BY strftime('%m', date);",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "Who are the account holder identification numbers whose who have transactions on the credit card with the amount is less than the average, in 1998?",
    "ground_truth_sql": "SELECT T1.account_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T1.date) = '1998' AND T1.operation = 'VYBER KARTOU' AND T1.amount < (SELECT AVG(amount) FROM trans WHERE STRFTIME('%Y', date) = '1998')",
    "answer_sql": "SELECT DISTINCT c.client_id FROM trans t JOIN disp d ON t.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE t.operation = 'VYBER KARTOU' AND strftime('%Y', t.date) = '1998' AND t.amount < (     SELECT AVG(amount)     FROM trans     WHERE operation = 'VYBER KARTOU'     AND strftime('%Y', date) = '1998' );",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "Who are the female account holders who own credit cards and also have loans?",
    "ground_truth_sql": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T5 ON T2.account_id = T5.account_id INNER JOIN loan AS T3 ON T5.account_id = T3.account_id INNER JOIN card AS T4 ON T2.disp_id = T4.disp_id WHERE T1.gender = 'F'",
    "answer_sql": "SELECT DISTINCT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'F' AND disp.type = 'OWNER' AND card.type = 'credit';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many female clients' accounts are in the region of South Bohemia?",
    "ground_truth_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A3 = 'south Bohemia'",
    "answer_sql": "SELECT COUNT(DISTINCT d.account_id) FROM client c JOIN district dist ON c.district_id = dist.district_id JOIN disp d ON c.client_id = d.client_id WHERE c.gender = 'F' AND dist.A3 = 'south Bohemia';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Please list the accounts whose district is Tabor that are eligible for loans.",
    "ground_truth_sql": "SELECT T2.account_id FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'OWNER' AND T1.A2 = 'Tabor'",
    "answer_sql": "SELECT DISTINCT a.account_id, a.district_id, a.frequency, a.date FROM account a JOIN district d ON a.district_id = d.district_id JOIN disp di ON a.account_id = di.account_id WHERE d.A2 = 'Tabor' AND di.type = 'OWNER';",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
    "ground_truth_sql": "SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000",
    "answer_sql": "SELECT DISTINCT d.type FROM disp d JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE d.type != 'OWNER' AND dist.A11 > 8000 AND dist.A11 <= 9000;",
    "difficulty": "challenging"
},
{
    "db_id": "financial",
    "question": "How many accounts in North Bohemia has made a transaction with the partner's bank being AB?",
    "ground_truth_sql": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.bank = 'AB' AND T1.A3 = 'north Bohemia'",
    "answer_sql": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN district ON account.district_id = district.district_id JOIN trans ON account.account_id = trans.account_id WHERE district.A3 = 'North Bohemia' AND trans.bank = 'AB';",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "Please list the name of the districts with accounts that made withdrawal transactions.",
    "ground_truth_sql": "SELECT DISTINCT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ'",
    "answer_sql": "SELECT DISTINCT d.A2 FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE t.type = 'VYDAJ';",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?",
    "ground_truth_sql": "SELECT AVG(T1.A15) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T2.date) >= '1997' AND T1.A15 > 4000",
    "answer_sql": "SELECT AVG(regional_avg) AS average_crime_rate FROM (     SELECT A3, AVG(A15) AS regional_avg     FROM district     GROUP BY A3     HAVING AVG(A15) > 4000     AND EXISTS (         SELECT 1         FROM account a         JOIN district d_sub ON a.district_id = d_sub.district_id         WHERE d_sub.A3 = district.A3         AND a.date >= '1997-01-01'     ) );",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "How many 'classic' cards are eligible for loan?",
    "ground_truth_sql": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'classic' AND T2.type = 'OWNER'",
    "answer_sql": "SELECT COUNT(*) FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'classic' AND disp.type = 'OWNER';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many male clients in 'Hl.m. Praha' district?",
    "ground_truth_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'",
    "answer_sql": "SELECT COUNT(*)  FROM client  JOIN district ON client.district_id = district.district_id  WHERE client.gender = 'M' AND district.A2 = 'Hl.m. Praha';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many percent of 'Gold' cards were issued prior to 1998?",
    "ground_truth_sql": "SELECT CAST(SUM(type = 'gold' AND STRFTIME('%Y', issued) < '1998') AS REAL) * 100 / COUNT(card_id) FROM card",
    "answer_sql": "SELECT      (COUNT(CASE WHEN type = 'gold' AND strftime('%Y', issued) < '1998' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM card;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Who is the owner of the account with the largest loan amount?",
    "ground_truth_sql": "SELECT T1.client_id FROM disp AS T1 INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN loan AS T2 ON T3.account_id = T2.account_id WHERE T1.type = 'OWNER' ORDER BY T2.amount DESC LIMIT 1",
    "answer_sql": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE d.type = 'OWNER' ORDER BY l.amount DESC LIMIT 1;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What is the number of committed crimes in 1995 in the district of the account with the id 532?",
    "ground_truth_sql": "SELECT T1.A15 FROM district AS T1 INNER JOIN `account` AS T2 ON T1.district_id = T2.district_id WHERE T2.account_id = 532",
    "answer_sql": "SELECT A15 FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532);",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What is the district Id of the account that placed the order with the id 33333?",
    "ground_truth_sql": "SELECT T3.district_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.order_id = 33333",
    "answer_sql": "SELECT a.district_id FROM `order` o JOIN account a ON o.account_id = a.account_id WHERE o.order_id = 33333;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "List all the withdrawals in cash transactions that the client with the id 3356 makes.",
    "ground_truth_sql": "SELECT T4.trans_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE T1.client_id = 3356 AND T4.operation = 'VYBER'",
    "answer_sql": "SELECT t.*  FROM trans t JOIN disp d ON t.account_id = d.account_id WHERE d.client_id = 3356 AND t.operation = 'VYBER'",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Among the weekly issuance accounts, how many have a loan of under 200000?",
    "ground_truth_sql": "SELECT COUNT(T1.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.amount < 200000",
    "answer_sql": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN loan ON account.account_id = loan.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND loan.amount < 200000;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What type of credit card does the client with the id 13539 own?",
    "ground_truth_sql": "SELECT T3.type FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T1.disp_id = T3.disp_id WHERE T2.client_id = 13539",
    "answer_sql": "SELECT card.type FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE client.client_id = 13539;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What is the region of the client with the id 3541 from?",
    "ground_truth_sql": "SELECT T1.A3 FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.client_id = 3541",
    "answer_sql": "SELECT d.A3 AS region FROM district d JOIN client c ON d.district_id = c.district_id WHERE c.client_id = 3541;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Which district has the most accounts with loan contracts finished with no problems?",
    "ground_truth_sql": "SELECT T1.A2 FROM District AS T1 INNER JOIN Account AS T2 ON T1.District_id = T2.District_id INNER JOIN Loan AS T3 ON T2.Account_id = T3.Account_id WHERE T3.status = 'A' GROUP BY T1.District_id ORDER BY COUNT(T2.Account_id) DESC LIMIT 1",
    "answer_sql": "SELECT d.A2 AS district_name, COUNT(DISTINCT a.account_id) AS num_accounts FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.status = 'A' GROUP BY d.district_id ORDER BY num_accounts DESC LIMIT 1;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "Who placed the order with the id 32423?",
    "ground_truth_sql": "SELECT T3.client_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T4 ON T4.account_id = T2.account_id  INNER JOIN client AS T3 ON T4.client_id = T3.client_id WHERE T1.order_id = 32423",
    "answer_sql": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN \"order\" o ON d.account_id = o.account_id WHERE o.order_id = 32423 AND d.type = 'OWNER';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Please list all the transactions made by accounts from district 5.",
    "ground_truth_sql": "SELECT T3.trans_id FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.district_id = 5",
    "answer_sql": "SELECT trans.* FROM trans JOIN account ON trans.account_id = account.account_id WHERE account.district_id = 5;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many of the accounts are from Jesenik district?",
    "ground_truth_sql": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A2 = 'Jesenik'",
    "answer_sql": "SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Jesenik';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "List all the clients' IDs whose junior credit cards were issued after 1996.",
    "ground_truth_sql": "SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'junior' AND T1.issued >= '1997-01-01'",
    "answer_sql": "SELECT DISTINCT d.client_id FROM card c JOIN disp d ON c.disp_id = d.disp_id WHERE c.type = 'junior' AND c.issued >= '1997-01-01';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?",
    "ground_truth_sql": "SELECT CAST(SUM(T2.gender = 'F') AS REAL) * 100 / COUNT(T2.client_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A11 > 10000",
    "answer_sql": "SELECT      100.0 * COUNT(DISTINCT CASE WHEN c.gender = 'F' THEN c.client_id END) / COUNT(DISTINCT c.client_id) AS percentage_women FROM      client c JOIN      disp d ON c.client_id = d.client_id JOIN      account a ON d.account_id = a.account_id JOIN      district dist ON a.district_id = dist.district_id WHERE      dist.A11 > 10000;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
    "ground_truth_sql": "SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'",
    "answer_sql": "WITH male_accounts AS (     SELECT DISTINCT account_id     FROM disp     JOIN client ON disp.client_id = client.client_id     WHERE client.gender = 'M' ), loan_sums AS (     SELECT          SUM(CASE WHEN strftime('%Y', date) = '1996' THEN amount ELSE 0 END) as sum_1996,         SUM(CASE WHEN strftime('%Y', date) = '1997' THEN amount ELSE 0 END) as sum_1997     FROM loan     WHERE account_id IN (SELECT account_id FROM male_accounts) ) SELECT      CASE          WHEN sum_1996 = 0 THEN NULL          ELSE (sum_1997 - sum_1996) * 100.0 / sum_1996      END as growth_rate FROM loan_sums;",
    "difficulty": "challenging"
},
{
    "db_id": "financial",
    "question": "How many credit card withdrawals were recorded after 1995?",
    "ground_truth_sql": "SELECT COUNT(account_id) FROM trans WHERE STRFTIME('%Y', date) > '1995' AND operation = 'VYBER KARTOU'",
    "answer_sql": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
    "ground_truth_sql": "SELECT SUM(IIF(A3 = 'east Bohemia', A16, 0)) - SUM(IIF(A3 = 'north Bohemia', A16, 0)) FROM district",
    "answer_sql": "SELECT      (SELECT SUM(A16) FROM district WHERE A3 = 'north Bohemia') -      (SELECT SUM(A16) FROM district WHERE A3 = 'east Bohemia')  AS difference;",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "How many owner and disponent dispositions are there from account number 1 to account number 10?",
    "ground_truth_sql": "SELECT SUM(type = 'OWNER') , SUM(type = 'DISPONENT') FROM disp WHERE account_id BETWEEN 1 AND 10",
    "answer_sql": "SELECT type, COUNT(*)  FROM disp  WHERE account_id BETWEEN 1 AND 10  GROUP BY type;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
    "ground_truth_sql": "SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539",
    "answer_sql": "-- SQL for the first question: Count of account statement requests for account_id 3 SELECT COUNT(*) AS statement_request_count FROM trans WHERE account_id = 3 AND operation = 'ACCOUNT STATEMENT';  -- SQL for the second question: Purpose (k_symbol) for debit transactions totaling 3539 SELECT k_symbol FROM trans WHERE type = 'debit' GROUP BY k_symbol HAVING SUM(amount) = 3539;",
    "difficulty": "challenging"
},
{
    "db_id": "financial",
    "question": "What year was account owner number 130 born?",
    "ground_truth_sql": "SELECT STRFTIME('%Y', T1.birth_date) FROM client AS T1 INNER JOIN disp AS T3 ON T1.client_id = T3.client_id INNER JOIN account AS T2 ON T3.account_id = T2.account_id WHERE T2.account_id = 130",
    "answer_sql": "SELECT strftime('%Y', c.birth_date) AS birth_year FROM client c JOIN disp d ON c.client_id = d.client_id WHERE d.account_id = 130 AND d.type = 'OWNER';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many accounts have an owner disposition and request for a statement to be generated upon a transaction?",
    "ground_truth_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' AND T1.frequency = 'POPLATEK PO OBRATU'",
    "answer_sql": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN disp d ON a.account_id = d.account_id WHERE d.type = 'OWNER' AND a.frequency = 'POPLATEK PO OBRATU';",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "What is the amount of debt that client number 992 has, and how is this client doing with payments?",
    "ground_truth_sql": "SELECT T4.amount, T4.status FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 on T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id WHERE T1.client_id = 992",
    "answer_sql": "SELECT      COALESCE(SUM(l.amount), 0) AS debt_amount,     CASE          WHEN COUNT(l.loan_id) = 0 THEN 'No loans'         ELSE GROUP_CONCAT(l.status)      END AS payment_status FROM client c LEFT JOIN disp d ON c.client_id = d.client_id LEFT JOIN loan l ON d.account_id = l.account_id WHERE c.client_id = 992 GROUP BY c.client_id;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?",
    "ground_truth_sql": "SELECT T4.balance, T1.gender FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id =T3.account_id INNER JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE T1.client_id = 4 AND T4.trans_id = 851",
    "answer_sql": "SELECT t.balance, c.gender FROM trans t JOIN disp d ON t.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE t.trans_id = 851 AND d.client_id = 4 AND d.type = 'OWNER';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Which kind of credit card does client number 9 possess?",
    "ground_truth_sql": "SELECT T3.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.client_id = 9",
    "answer_sql": "SELECT c.type FROM card c JOIN disp d ON c.disp_id = d.disp_id WHERE d.client_id = 9;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How much, in total, did client number 617 pay for all of the transactions in 1998?",
    "ground_truth_sql": "SELECT SUM(T3.amount) FROM client AS T1 INNER JOIN disp AS T4 ON T1.client_id = T4.client_id INNER JOIN account AS T2 ON T4.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE STRFTIME('%Y', T3.date)= '1998' AND T1.client_id = 617",
    "answer_sql": "SELECT SUM(-t.amount) AS total_paid FROM trans t JOIN disp d ON t.account_id = d.account_id WHERE d.client_id = 617 AND strftime('%Y', t.date) = '1998' AND t.amount < 0;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.",
    "ground_truth_sql": "SELECT T1.client_id, T3.account_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T4 ON T1.client_id = T4.client_id INNER JOIN account AS T3 ON T2.district_id = T3.district_id and T4.account_id = T3.account_id WHERE T2.A3 = 'east Bohemia' AND STRFTIME('%Y', T1.birth_date) BETWEEN '1983' AND '1987'",
    "answer_sql": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district di ON a.district_id = di.district_id WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND di.A2 = 'East Bohemia';",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "Please provide the IDs of the 3 female clients with the largest loans.",
    "ground_truth_sql": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T4 on T1.client_id= T4.client_id INNER JOIN account AS T2 ON T4.account_id = T2.account_id  INNER JOIN loan AS T3 ON T2.account_id = T3.account_id and T4.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3",
    "answer_sql": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'F' GROUP BY c.client_id ORDER BY MAX(l.amount) DESC LIMIT 3;",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many male customers who were born between 1974 and 1976 have made a payment on their home in excess of $4000?",
    "ground_truth_sql": "SELECT COUNT(T1.account_id) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T4 ON T2.account_id = T4.account_id INNER JOIN client AS T3 ON T4.client_id = T3.client_id WHERE STRFTIME('%Y', T3.birth_date) BETWEEN '1974' AND '1976' AND T3.gender = 'M' AND T1.amount > 4000 AND T1.k_symbol = 'SIPO'",
    "answer_sql": "SELECT COUNT(DISTINCT c.client_id) FROM client c WHERE c.gender = 'M' AND strftime('%Y', c.birth_date) BETWEEN '1974' AND '1976' AND EXISTS (     SELECT 1     FROM disp d     JOIN trans t ON d.account_id = t.account_id     WHERE d.client_id = c.client_id     AND t.k_symbol = 'SIPO'     AND ABS(t.amount) > 4000 );",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "How many accounts in Beroun were opened after 1996?",
    "ground_truth_sql": "SELECT COUNT(account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) > '1996' AND T2.A2 = 'Beroun'",
    "answer_sql": "SELECT COUNT(*)  FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Beroun'  AND a.date > '1996-12-31';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "How many female customers have a junior credit card?",
    "ground_truth_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'F' AND T3.type = 'junior'",
    "answer_sql": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE c.gender = 'F' AND ca.type = 'junior';",
    "difficulty": "simple"
},
{
    "db_id": "financial",
    "question": "What proportion of customers who have accounts at the Prague branch are female?",
    "ground_truth_sql": "SELECT CAST(SUM(T2.gender = 'F') AS REAL) / COUNT(T2.client_id) * 100 FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'Prague'",
    "answer_sql": "SELECT      100.0 * SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0) / COUNT(DISTINCT c.client_id) AS female_percentage FROM client c WHERE EXISTS (     SELECT 1     FROM disp d     JOIN account a ON d.account_id = a.account_id     JOIN district dist ON a.district_id = dist.district_id     WHERE d.client_id = c.client_id     AND dist.A3 = 'Prague' );",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "What percentage of male clients request for weekly statements to be issued?",
    "ground_truth_sql": "SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T3 ON T1.district_id = T3.district_id INNER JOIN account AS T2 ON T2.district_id = T3.district_id INNER JOIN disp as T4 on T1.client_id = T4.client_id AND T2.account_id = T4.account_id WHERE T2.frequency = 'POPLATEK TYDNE'",
    "answer_sql": "SELECT      (COUNT(DISTINCT CASE WHEN c.gender = 'M' THEN c.client_id END) * 100.0 /      COUNT(DISTINCT c.client_id)) AS percentage FROM client c JOIN disp d ON c.client_id = d.client_id JOIN trans t ON d.account_id = t.account_id WHERE t.k_symbol = 'POPLATEK TYDNE';",
    "difficulty": "moderate"
},
{
    "db_id": "financial",
    "question": "How many clients who choose statement of weekly issuance are Owner?",
    "ground_truth_sql": "SELECT COUNT(T2.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T2.account_id = T1.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.type = 'OWNER'",
    "answer_sql": "SELECT COUNT(DISTINCT d.client_id) AS count_clients FROM account a JOIN disp d ON a.account_id = d.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND d.type = 'OWNER';",
    "difficulty": "simple"
},
